<assemblies timestamp="06/14/2025 05:56:25">
  <assembly name="/projects/challenge/HRBackendExercise.API.Tests/bin/Debug/net6.0/HRBackendExercise.API.Tests.dll" run-date="2025-06-14" run-time="05:56:25" total="47" passed="22" failed="25" skipped="0" time="3.978" errors="0">
    <errors />
    <collection total="1" passed="1" failed="0" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Controller_DeleteShould" time="0.002">
      <test name="ControllerDeleteShouldReturnSuccessStatusCode" type="HRBackendExercise.API.Tests.Basic.Controller_DeleteShould" method="ReturnSuccessStatusCode" time="0.0019780" result="Pass">
        <traits />
      </test>
    </collection>
    <collection total="1" passed="1" failed="0" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Controller_GetShould" time="0.038">
      <test name="ControllerGetShouldReturnOk" type="HRBackendExercise.API.Tests.Basic.Controller_GetShould" method="ReturnOk_OnNotNullProduct" time="0.0378515" result="Pass">
        <traits />
      </test>
    </collection>
    <collection total="2" passed="1" failed="1" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Controller_PostShould" time="0.344">
      <test name="ControllerPostShouldReturnBadRequestOnNullInput" type="HRBackendExercise.API.Tests.Basic.Controller_PostShould" method="ReturnBadRequest_OnNullInputProduct" time="0.3036544" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.ObjectResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Basic.Controller_PostShould.ReturnBadRequest_OnNullInputProduct() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ControllerBasicTests.cs:line 66</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerPostShouldReturnSuccessStatusCode" type="HRBackendExercise.API.Tests.Basic.Controller_PostShould" method="ReturnSuccessStatusCode" time="0.0401218" result="Pass">
        <traits />
      </test>
    </collection>
    <collection total="2" passed="1" failed="1" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Controller_PutShould" time="0.294">
      <test name="ControllerPutShouldReturnSuccessStatusCode" type="HRBackendExercise.API.Tests.Basic.Controller_PutShould" method="ReturnSuccessStatusCode" time="0.2929956" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldReturnBadRequestOnNullProduct" type="HRBackendExercise.API.Tests.Basic.Controller_PutShould" method="ReturnBadRequest_OnNullInputProduct" time="0.0006627" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.OkResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Basic.Controller_PutShould.ReturnBadRequest_OnNullInputProduct() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ControllerBasicTests.cs:line 115</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="1" passed="0" failed="1" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Service_CreateShould" time="0.001">
      <test name="ServiceCreateShouldReturnNotNull" type="HRBackendExercise.API.Tests.Basic.Service_CreateShould" method="ReturnNotNull" time="0.0005358" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Basic.Service_CreateShould.ReturnNotNull() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 18</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="2" passed="0" failed="2" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Service_DeleteShould" time="0.001">
      <test name="ServiceDeleteShouldRemoveProudct" type="HRBackendExercise.API.Tests.Basic.Service_DeleteShould" method="RemoveProduct" time="0.0006013" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Basic.Service_DeleteShould.RemoveProduct() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 130</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceDeleteShouldDoNothing" type="HRBackendExercise.API.Tests.Basic.Service_DeleteShould" method="DoNothing_OnCollectionNotContainsProduct" time="0.0004885" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Basic.Service_DeleteShould.DoNothing_OnCollectionNotContainsProduct() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 146</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="2" passed="0" failed="2" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Service_GetAllShould" time="0.036">
      <test name="ServiceGetAllShouldReturnEmptyCollection" type="HRBackendExercise.API.Tests.Basic.Service_GetAllShould" method="RetrunEmpty" time="0.0347357" result="Fail">
        <failure>
          <message>Assert.Empty() Failure: Collection was not empty
Collection: [Product { Description = "Milk", Id = 1, Price = 12, SKU = null }, Product { Description = "French Bread", Id = 2, Price = 10, SKU = null }, Product { Description = "Choco Milk", Id = 3, Price = 15, SKU = null }, Product { Description = "Chocolate", Id = 4, Price = 23, SKU = null }, Product { Description = "Pen", Id = 5, Price = 5, SKU = null }]</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Basic.Service_GetAllShould.RetrunEmpty() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 54</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceGetAllShouldAllEntries" type="HRBackendExercise.API.Tests.Basic.Service_GetAllShould" method="ReturnAllEntries" time="0.0009415" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Basic.Service_GetAllShould.ReturnAllEntries() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 64</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="1" passed="0" failed="1" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Service_GetShould" time="0.001">
      <test name="ServiceGetShouldReturnNotNull" type="HRBackendExercise.API.Tests.Basic.Service_GetShould" method="ReturnNotNull_OnValidId" time="0.0005040" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Basic.Service_GetShould.ReturnNotNull_OnValidId() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 34</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="2" passed="0" failed="2" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Basic.Service_UpdateShould" time="0.078">
      <test name="ServiceUpdateShouldThrowException" type="HRBackendExercise.API.Tests.Basic.Service_UpdateShould" method="ThrowException_OnInvalidId" time="0.0109935" result="Fail">
        <failure>
          <message>Assert.StartsWith() Failure: String start does not match
String:         "Product with ID 500 was not found."
Expected start: "Invalid entity."</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Basic.Service_UpdateShould.ThrowException_OnInvalidId() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 117</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceUpdateShouldUpdateValues" type="HRBackendExercise.API.Tests.Basic.Service_UpdateShould" method="UpdateValues" time="0.0674341" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Update(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 59
   at HRBackendExercise.API.Tests.Basic.Service_UpdateShould.UpdateValues() in /projects/challenge/HRBackendExercise.API.Tests/Basic/ServiceBasicTests.cs:line 98</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="27" passed="17" failed="10" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Hidden.ControllerTests" time="0.247">
      <test name="ControllerPostShouldReturnBadRequestOnNullSKU" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ShouldReturnBadRequest_OnNullSKU" time="0.0006548" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.ObjectResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Post_ShouldReturnBadRequest_OnNullSKU() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 202</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerGetShouldReturnNotFound" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Get_ShouldReturnNotFound_OnNullProduct" time="0.0010144" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldReturnNotFound" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldReturnNotFound_OnNullProduct" time="0.0215790" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.NotFoundResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.OkResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Put_ShouldReturnNotFound_OnNullProduct() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 309</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerPutInternalServerErrorShouldHaveMessageProp" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ResponseShouldHasMessageProperty_OnInternalServerErrorScenario" time="0.0328260" result="Pass">
        <traits />
      </test>
      <test name="ControllerPostShouldImplementService" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ShouldCallCreateFromService" time="0.0322433" result="Pass">
        <traits />
      </test>
      <test name="ControllerPostShouldReturnCreated" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ShouldReturnCreatedStatusCode" time="0.0081210" result="Pass">
        <traits />
      </test>
      <test name="ControllerPostShouldBeHttpDecorated" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ShouldHasAccordinglyDecorator" time="0.0027302" result="Pass">
        <traits />
      </test>
      <test name="ControllerPostShouldReturnBadRequestOnZeroPrice" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ShouldReturnBadRequest_OnPriceEqualsToZero" time="0.0007637" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.ObjectResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Post_ShouldReturnBadRequest_OnPriceEqualsToZero() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 217</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerDeleteShouldReturnNoContent" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Delete_ShouldReturnNoContent" time="0.0199140" result="Fail">
        <failure>
          <message>Assert.Equal() Failure: Values differ
Expected: 204
Actual:   200</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Delete_ShouldReturnNoContent() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 452</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerPutShouldReturnNoContent" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldReturnNoContent" time="0.0021722" result="Fail">
        <failure>
          <message>Assert.Equal() Failure: Values differ
Expected: 204
Actual:   200</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Put_ShouldReturnNoContent() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 291</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerDeleteShouldBeHttpDecorated" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Delete_ShouldHasAccordinglyDecorator" time="0.0006482" result="Pass">
        <traits />
      </test>
      <test name="ControllerGetShouldImplementService" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Get_ShouldCallGetByIdFromService" time="0.0028149" result="Pass">
        <traits />
      </test>
      <test name="ControllerDeleteShouldImplementService" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Delete_ShouldCallDeleteFromService" time="0.0033523" result="Pass">
        <traits />
      </test>
      <test name="ControllerDeleteInternalServerErrorShouldHaveMessageProp" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Delete_ResponseShouldHasMessageProperty_OnInternalServerErrorScenario" time="0.0224612" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldReturnBadRequestOnZeroId" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldReturnBadRequest_OnIdEqualsToZero" time="0.0007521" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.OkResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Put_ShouldReturnBadRequest_OnIdEqualsToZero() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 377</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerDeleteShouldReturnNotFound" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Delete_ShouldReturnNotFound_OnNullProduct" time="0.0014155" result="Pass">
        <traits />
      </test>
      <test name="ControllerGetInternalServerErrorShouldHaveMessageProp" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Get_ResponseShouldHasMessageProperty_OnInternalServerErrorScenario" time="0.0012818" result="Pass">
        <traits />
      </test>
      <test name="ControllerDeleteShouldReturnInternalServerError" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Delete_ShouldReturnInternalServerError_OnUnhandledException" time="0.0100931" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldImplementService" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldCallUpdateFromService" time="0.0642750" result="Fail">
        <failure>
          <message>Moq.MockException : 
Expected invocation on the mock once, but was 0 times: x =&gt; x.GetById(12)

Performed invocations:

   Mock&lt;IProductsService:23&gt; (x):

      IProductsService.Update(Product)
</message>
          <stack-trace>   at Moq.Mock.Verify(Mock mock, LambdaExpression expression, Times times, String failMessage) in /_/src/Moq/Mock.cs:line 331
   at Moq.Mock`1.Verify[TResult](Expression`1 expression, Func`1 times) in /_/src/Moq/Mock`1.cs:line 1033
   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Put_ShouldCallUpdateFromService() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 235</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerPostInternalServerErrorShouldHaveMessageProp" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ResponseShouldHasMessageProperty_OnInternalServerErrorScenario" time="0.0016541" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldReturnBadRequestOnNullSKU" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldReturnBadRequest_OnNullSKU" time="0.0006843" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.OkResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Put_ShouldReturnBadRequest_OnNullSKU() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 347</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerPostShouldReturnInternalServerError" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Post_ShouldReturnInternalServerError_OnUnhandledException" time="0.0015492" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldReturnBadRequestOnZeroPrice" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldReturnBadRequest_OnPriceEqualsToZero" time="0.0006932" result="Fail">
        <failure>
          <message>Assert.IsType() Failure: Value is not the exact type
Expected: typeof(Microsoft.AspNetCore.Mvc.BadRequestResult)
Actual:   typeof(Microsoft.AspNetCore.Mvc.OkResult)</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Put_ShouldReturnBadRequest_OnPriceEqualsToZero() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 362</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ControllerPutShouldReturnInternalServerError" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldReturnInternalServerError_OnUnhandledException" time="0.0095379" result="Pass">
        <traits />
      </test>
      <test name="ControllerPutShouldBeHttpDecorated" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Put_ShouldHasAccordinglyDecorator" time="0.0010315" result="Pass">
        <traits />
      </test>
      <test name="ControllerGetShouldReturnInternalServerError" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Get_ShouldReturnInternalServerError_OnUnhandledException" time="0.0015613" result="Pass">
        <traits />
      </test>
      <test name="ControllerGetShouldBeHttpDecorated" type="HRBackendExercise.API.Tests.Hidden.ControllerTests" method="Get_ShouldHasAccordinglyDecorator" time="0.0007339" result="Fail">
        <failure>
          <message>System.Reflection.AmbiguousMatchException : Ambiguous match found.</message>
          <stack-trace>   at System.RuntimeType.GetMethodImplCommon(String name, Int32 genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers)
   at System.Type.GetMethod(String name, BindingFlags bindingAttr)
   at System.Type.GetMethod(String name)
   at HRBackendExercise.API.Tests.Hidden.ControllerTests.Get_ShouldHasAccordinglyDecorator() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ControllerTests.cs:line 54</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
    <collection total="6" passed="1" failed="5" skipped="0" name="Test collection for HRBackendExercise.API.Tests.Hidden.ServiceTests" time="0.020">
      <test name="ServiceCreateShouldCreateARecord" type="HRBackendExercise.API.Tests.Hidden.ServiceTests" method="Create_ShouldAddARecord" time="0.0025493" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Hidden.ServiceTests.Create_ShouldAddARecord() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ServiceTests.cs:line 49</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceUpdateShouldThrowArgumentBasedException" type="HRBackendExercise.API.Tests.Hidden.ServiceTests" method="Update_ShouldThrowArgumentBasedException_OnInvalidId" time="0.0154571" result="Fail">
        <failure>
          <message>Assert.StartsWith() Failure: String start does not match
String:         "Product with ID 500 was not found."
Expected start: "Invalid entity."</message>
          <stack-trace>   at HRBackendExercise.API.Tests.Hidden.ServiceTests.Update_ShouldThrowArgumentBasedException_OnInvalidId() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ServiceTests.cs:line 93</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceCreateShouldIgnoreInputId" type="HRBackendExercise.API.Tests.Hidden.ServiceTests" method="Create_ShouldIgnoreInputModelId" time="0.0005073" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Hidden.ServiceTests.Create_ShouldIgnoreInputModelId() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ServiceTests.cs:line 35</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceCreateShouldAssignIncrementalIds" type="HRBackendExercise.API.Tests.Hidden.ServiceTests" method="Create_ShouldAssignIncrementalIds" time="0.0006282" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Hidden.ServiceTests.Create_ShouldAssignIncrementalIds() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ServiceTests.cs:line 16</stack-trace>
        </failure>
        <traits />
      </test>
      <test name="ServiceGetShouldReturnNullOnEmptyCollection" type="HRBackendExercise.API.Tests.Hidden.ServiceTests" method="Get_ShouldReturnNull_OnEmptyCollection" time="0.0008544" result="Pass">
        <traits />
      </test>
      <test name="ServiceGetShouldReturnNullOnInvalidId" type="HRBackendExercise.API.Tests.Hidden.ServiceTests" method="Get_ShouldReturnNull_OnInvalidId" time="0.0004317" result="Fail">
        <failure>
          <message>System.ComponentModel.DataAnnotations.ValidationException : Price must be greater than zero</message>
          <stack-trace>   at HRBackendExercise.API.Services.ProductService.Create(Product entity) in /projects/challenge/HRBackendExercise.API/Services/ProductService.cs:line 34
   at HRBackendExercise.API.Tests.Hidden.ServiceTests.Get_ShouldReturnNull_OnInvalidId() in /projects/challenge/HRBackendExercise.API.Tests/Hidden/ServiceTests.cs:line 77</stack-trace>
        </failure>
        <traits />
      </test>
    </collection>
  </assembly>
</assemblies>